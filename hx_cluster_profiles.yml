---
# host specific policies.  Use the ucs hosts group to configure multiple targets
- hosts: "{{ target }}"
  connection: local
  gather_facts: no
  vars:
    api_info: &api_info
      api_private_key: "{{ api_private_key }}"
      api_key_id: "{{ api_key_id }}"
    object_state: present
    target: ucs
  tasks:
  # Get required policies that will be part of the profile
  - name: HX Local Credential (aka Security) Policy
    intersight_objects:
      <<: *api_info
      objects:
      - {
        "api_module": "intersight.apis.hyperflex_local_credential_policy_api",
        "api_class": "HyperflexLocalCredentialPolicyApi",
        "api_method_prefix": "hyperflex_local_credential_policies",
        "get_filter": "Name eq '{{ hx_local_credential_policy }}'",
        "data_module": "intersight.models.hyperflex_local_credential_policy",
        "data_class": "HyperflexLocalCredentialPolicy"
      }
    register: local_credential
    tags: [security]
  # Sys config (DNS, NTP, and Timezone)
  - name: HX Sys Config Policy
    intersight_objects:
      <<: *api_info
      objects:
      - {
        "api_module": "intersight.apis.hyperflex_sys_config_policy_api",
        "api_class": "HyperflexSysConfigPolicyApi",
        "api_method_prefix": "hyperflex_sys_config_policies",
        "get_filter": "Name eq '{{ hx_sys_config_policy }}'",
        "data_module": "intersight.models.hyperflex_sys_config_policy",
        "data_class": "HyperflexSysConfigPolicy"
      }
    register: sys_config
  # vCenter
  - name: HX vCenter Config Policy
    intersight_objects:
      <<: *api_info
      objects:
      - {
        "api_module": "intersight.apis.hyperflex_vcenter_config_policy_api",
        "api_class": "HyperflexVcenterConfigPolicyApi",
        "api_method_prefix": "hyperflex_vcenter_config_policies",
        "get_filter": "Name eq '{{ hx_vcenter_config_policy }}'",
        "data_module": "intersight.models.hyperflex_vcenter_config_policy",
        "data_class": "HyperflexVcenterConfigPolicy"
      }
    register: vcenter
  # storage policy settings
  - name: HX Storage Settings Policy
    intersight_objects:
      <<: *api_info
      objects:
      - {
        "api_module": "intersight.apis.hyperflex_cluster_storage_policy_api",
        "api_class": "HyperflexClusterStoragePolicyApi",
        "api_method_prefix": "hyperflex_cluster_storage_policies",
        "get_filter": "Name eq '{{ hx_cluster_storage_policy }}'",
        "data_module": "intersight.models.hyperflex_cluster_storage_policy",
        "data_class": "HyperflexClusterStoragePolicy"
      }
    register: storage_setting
  # proxy settings
  - name: HX Proxy Settings Policy
    intersight_objects:
      <<: *api_info
      objects:
      - {
        "api_module": "intersight.apis.hyperflex_proxy_setting_policy_api",
        "api_class": "HyperflexProxySettingPolicyApi",
        "api_method_prefix": "hyperflex_proxy_setting_policies",
        "get_filter": "Name eq '{{ hx_proxy_setting_policy }}'",
        "data_module": "intersight.models.hyperflex_proxy_setting_policy",
        "data_class": "HyperflexProxySettingPolicy"
      }
    register: proxy_setting
  # cluster network
  - name: HX Cluster Network Policy
    intersight_objects:
      <<: *api_info
      objects:
      - {
        "api_module": "intersight.apis.hyperflex_cluster_network_policy_api",
        "api_class": "HyperflexClusterNetworkPolicyApi",
        "api_method_prefix": "hyperflex_cluster_network_policies",
        "get_filter": "Name eq '{{ hx_cluster_network_policy }}'",
        "data_module": "intersight.models.hyperflex_cluster_network_policy",
        "data_class": "HyperflexClusterNetworkPolicy"
      }
    register: cluster_network
  # node config (Node IP and Hostname)
  - name: HX Node Config Policy
    intersight_objects:
      <<: *api_info
      objects:
      - {
        "api_module": "intersight.apis.hyperflex_node_config_policy_api",
        "api_class": "HyperflexNodeConfigPolicyApi",
        "api_method_prefix": "hyperflex_node_config_policies",
        "get_filter": "Name eq '{{ hx_node_config_policy }}'",
        "data_module": "intersight.models.hyperflex_node_config_policy",
        "data_class": "HyperflexNodeConfigPolicy"
      }
    register: node_config
  # HX Cluster profile with cluster IP specified
  # PATCH with policy MOIDs that were read in above tasks
  - name: Configure HX Cluster Profile
    intersight_objects:
      <<: *api_info
      objects:
      - {
        "api_module": "intersight.apis.hyperflex_cluster_profile_api",
        "api_class": "HyperflexClusterProfileApi",
        "api_method_prefix": "hyperflex_cluster_profiles",
        "get_filter": "Name eq '{{ hx_profile_name }}'",
        "data_module": "intersight.models.hyperflex_cluster_profile",
        "data_class": "HyperflexClusterProfile",
        "api_body": {
            "Name":"{{ hx_profile_name }}",
            "MgmtPlatform":"{{ hx_mgmt_platform }}",
            "Description":"{{ hx_profile_description }}",
            "StorageDataVlan":{
                "VlanId":"{{ hx_storage_vlan }}"
            },
            "MgmtIpAddress":"{{ mgmt_ip }}",
            "Tags":[
                {
                    "Key":"Demo",
                    "Value":"Yes"
                }
            ],
            "LocalCredential": "{{ local_credential.api_response.moid }}",
            "SysConfig": "{{ sys_config.api_response.moid }}",
            "ClusterNetwork": "{{ cluster_network.api_response.moid }}",
            "VcenterConfig": "{{ vcenter.api_response.moid }}",
            "ClusterStorage": "{{ storage_setting.api_response.moid }}",
            "NodeConfig": "{{ node_config.api_response.moid }}",
            "ProxySetting": "{{ proxy_setting.api_response.moid }}"
        }
      }
      state: "{{ object_state }}"
    tags: [security]
    when:
    - local_credential.api_response is defined
    - sys_config.api_response is defined
    - cluster_network.api_response is defined
    - vcenter.api_response is defined
    - node_config.api_response is defined
    - proxy_setting.api_response is defined
    - storage_setting.api_response is defined
