---
#
# Configure Server Profiles and Policies
#
# The hosts group used is provided by the group variable or defaulted to 'Intersight_Standalone'.
# You can specify a specific host (or host group) on the command line:
#   ansible-playbook ... -e group=<your host group>
#   e.g., ansible-playbook server_profiles.yml -e group=TME_Demo
#
- hosts: "{{ group | default('Intersight_Standalone') }}"
  connection: local
  gather_facts: false
  vars:
    # Create an anchor for api_info that can be used throughout the file
    api_info: &api_info
      api_private_key: "{{ api_private_key }}"
      api_key_id: "{{ api_key_id }}"
      api_uri: "{{ api_uri | default(omit) }}"
      validate_certs: "{{ validate_certs | default(omit) }}"
      state: "{{ state | default(omit) }}"
    # Server Profile name default
    profile_name: "SP-{{ inventory_hostname }}"
  tasks:
    #
    # Configure profiles specific to server (run for each server in the inventory)
    # Server Profiles role will register a profile_resp and profile_resp list (from all hosts) can be used by policy tasks
    #
    - name: "Configure {{ profile_name }} Server Profile"
      intersight_rest_api:
        <<: *api_info
        resource_path: /server/Profiles
        query_params:
          $filter: "Name eq '{{ profile_name }}'"
        api_body: {
          "Name": "{{ profile_name }}",
          "AssignedServer": {
            "Moid": "{{ server_moid }}"
          }
        }
      register: profile_resp
      when: server_moid is defined
      delegate_to: localhost
      tags: server_profiles
    # Deploy (or perform other profile_action) when tag is set, e.g., --tags deploy
    # profile_action can be given on the command line if needed, e.g., ansible-playbook ... -e profile_action=Unassign
    - name: Deploy (or user defined profile_action) Server Profile
      intersight_rest_api:
        <<: *api_info
        resource_path: /server/Profiles
        query_params:
          $filter: "Name eq '{{ profile_name }}'"
        api_body: {
          "Action": "{{ profile_action | default('Deploy') }}"
        }
      delegate_to: localhost
      tags: [never, deploy]
    #
    # Enclose policy tasks in a block that runs once
    # Policy API body is specified in a role specific vars section for each role import
    # See https://intersight.com/apidocs/ or https://intersight.com/mobrowser/ for information on setting resource_path and api_body
    #
    - block:
        # Boot Order policy config
        - import_role:
            name: policies/server_policies
          vars:
            resource_path: /boot/PrecisionPolicies
            api_body: {
              "Name": "vmedia-local-disk",
              "ConfiguredBootMode": "Legacy",
              "BootDevices": [
                {
                  "ObjectType": "boot.LocalDisk",
                  "Enabled": true,
                  "Name": "boot",
                  "Slot": "HBA"
                },
                {
                  "ObjectType": "boot.VirtualMedia",
                  "Enabled": true,
                  "Name": "remote-vmedia",
                  "Subtype": "cimc-mapped-dvd"
                }
              ]
            }
          tags: boot_order
        # Virtual Media policy config
        - import_role:
            name: policies/server_policies
          vars:
            resource_path: /vmedia/Policies
            api_body: {
              "Name": "nfs-cdd",
              "Mappings": [
                {
                  "MountProtocol": "nfs",
                  "VolumeName": "nfs-cdd",
                  "DeviceType": "cdd",
                  "HostName": "172.28.224.77",
                  "RemotePath": "/mnt/SHARE/ISOS/CENTOS",
                  "RemoteFile": "CentOS-7-x86_64-DVD-1810.iso"
                },
                {
                  "MountProtocol": "nfs",
                  "VolumeName": "nfs-hdd",
                  "DeviceType": "hdd",
                  "HostName": "172.28.224.77",
                  "RemotePath": "/mnt/SHARE/ISOS/CENTOS/vmedia_images",
                  "RemoteFile": "{{ profile_name }}.img"
                }
              ]
            }
          tags: virtual_media
        # Bios policy config
        - import_role:
            name: policies/server_policies
          vars:
            resource_path: /bios/Policies
            api_body: {
              "Name": "adaptive-memory",
              "CiscoAdaptiveMemTraining": "enabled"
            }
          tags: bios
        # Snmp policy config
        - import_role:
            name: policies/server_policies
          vars:
            resource_path: /snmp/Policies
            api_body: {
              "Name": "snmp-local",
              "Enabled": true,
              "AccessCommunityString": "galaxy",
              "CommunityAccess": "Disabled",
              "SnmpPort": 161,
              "SnmpUsers": [
                {
                  "AuthType": "SHA",
                  "IsAuthPasswordSet": true,
                  "IsPrivacyPasswordSet": true,
                  "Name": "TMEUCS",
                  "PrivacyType": "AES",
                  "SecurityLevel": "AuthPriv",
                  "AuthPassword": "password",
                  "PrivacyPassword": "password"
                }
              ],
              "SysContact": "Cisco TME",
              "SysLocation": "Cisco TME DC",
              "TrapCommunity": "galaxy"
            }
          tags: snmp
        # NTP policy config
        - import_role:
            name: policies/server_policies
          vars:
            resource_path: /ntp/Policies
            api_body: {
              "Name": "MVP_NTP",
              "Enabled": true,
              "NtpServers": [
                "ntp.esl.cisco.com"
              ]
            }
          tags: ntp
      # Policies are common, so only run this block once and not for every host
      run_once: true
      delegate_to: localhost
