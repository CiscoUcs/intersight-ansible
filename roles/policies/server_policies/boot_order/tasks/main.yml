---
- name: "Configure {{ boot_policy }} Boot Policy"
  vars:
    # Create an anchor for api_info that can be used throughout the file
    api_info: &api_info
      api_private_key: "{{ api_private_key }}"
      api_key_id: "{{ api_key_id }}"
      api_uri: "{{ api_uri | default(omit) }}"
      validate_certs: "{{ validate_certs | default(omit) }}"
      state: "{{ state | default(omit) }}"
  intersight_rest_api:
    <<: *api_info
    resource_path: /boot/PrecisionPolicies
    query_params:
      $filter: "Name eq '{{ boot_policy }}'"
    api_body: {
      "Name": "{{ boot_policy }}",
      "ConfiguredBootMode": "Legacy",
      "BootDevices": [
        {
          "ObjectType": "boot.VirtualMedia",
          "Enabled": true,
          "Name": "remote-vmedia",
          "Subtype": "cimc-mapped-dvd"
        },
        {
          "ObjectType": "boot.LocalDisk",
          "Enabled": true,
          "Name": "localdisk",
          "Slot": "{{ disk_slot | default('') }}",
          "Bootloader": null
        }
      ],
    }
  register: policy_resp
# Append profile_resp list to policy
- block:
    # Create a list of all host's profile Moids
    - set_fact:
        # See the Ansible docs on json_query for info on how the Moid data is being extracted
        profile_list: "{{ ansible_play_hosts | map('extract', hostvars, 'profile_resp') | list | json_query(moid_query) }}"
      vars:
        moid_query: "[*].api_response.{Moid: Moid, ObjectType: 'server.Profile'}"
    - name: "Update Server Profiles used by {{ boot_policy }} Server Policy"
      intersight_rest_api:
        <<: *api_info
        resource_path: /boot/PrecisionPolicies
        update_method: post
        query_params:
          $filter: "Name eq '{{ boot_policy }}'"
        api_body: {
          "Profiles": "{{ profile_list }}"
        }
  # Do not update if the profile isn't available
  when:
    - profile_resp is defined
    - profile_resp.api_response.Moid is defined
